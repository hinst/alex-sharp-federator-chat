import fs from 'fs';
import lodash from 'lodash';
import SkypeMessage from './SkypeMessage';
import TelegramMessage from './TelegramMessage';

class App {
    myId = 'user718097882';
    dictionary: { [word: string]: number } = {};
    parsedMessages: string[][] = [];

    run() {
        this.loadSkypeMessages();
        this.loadTelegramMessages();
        const sortedDictionary = lodash.sortBy(Object.entries(this.dictionary), entry => entry[1])
            .reverse()
            .filter(w => w[0] != '.');

        const topWords = sortedDictionary.filter(w => w[0].length > 1).slice(0, 100).map(entry => entry[0]);
        console.log(topWords);
        let sourceText = '// Data generated by the builder\n';
        sourceText += 'export const TOP_WORDS = ' + JSON.stringify(topWords) + ';\n'
        const topMessages = this.parsedMessages.filter(message => topWords.some(w => message.includes(w)));
        console.log('Top messages: ' + topMessages.length);
        sourceText += 'export const MESSAGES = ' + JSON.stringify(topMessages, null, '    ') + ';'
        fs.writeFileSync('../chatbot/src/data/topWords.ts', sourceText);
    }

    private loadTelegramMessages() {
        const messages: TelegramMessage[] = JSON.parse(
            fs.readFileSync('./telegram-data/result.json').toString()
        ).messages;
        console.log('Telegram messages: ' + messages.length);
        for (const message of messages) {
            if (message.from_id == this.myId && typeof message.text === 'string')
                this.addMessage(message.text);
        }
    }

    private addMessage(text: string) {
        const words = getWords(text);
        for (const word of words)
            this.dictionary[word] = (this.dictionary[word] || 0) + 1;
        this.parsedMessages.push(words);
    }

    private loadSkypeMessages() {
        const userId = '8:truefedex';
        const allMessages = JSON.parse(
            fs.readFileSync('./skype-data/messages.json').toString()
        );
        const conversation = allMessages.conversations.find(
            (conversation: any) => conversation.id == userId
        );
        const messages: SkypeMessage[] = conversation.MessageList;
        console.log('Skype messages: ' + messages.length);
        for (const message of messages)
            if (message.content && message.from == userId)
                this.addMessage(message.content);
    }
}

function getWords(text: string) {
    const words: string[] = [];
    let word = '';
    for (const character of text) {
        if (isLetter(character))
            word += character;
        else if (word.length) {
            words.push(word.toLowerCase());
            word = '';
        }
        if (isChainBreaker(character))
            if (words.length && isLetter(words[words.length - 1]))
                words.push('.');
    }
    if (word.length)
        words.push(word.toLowerCase());
    if (words.length && words[words.length - 1] == '.')
        words.pop();
    return words;
}

function isLetter(text: string) {
    return text.toString().toLowerCase() != text.toString().toUpperCase();
}

function isChainBreaker(text: string) {
    return [';', '.', ':', '!', '?', ',', '\n'].includes(text);
}

new App().run();